{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst INITIAL_STATE = {\n  users: []\n};\n\nconst AllUsers = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case 'ADD_USER':\n      {\n        console.log(action.payload);\n        const {\n          user\n        } = action.payload;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          users: [...state.users, user]\n        });\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport default AllUsers;","map":{"version":3,"sources":["C:/Users/lucas/OneDrive/√Årea de Trabalho/Gama/Nova pasta/react-redux2.1/pages/store/modules/user/reducer.ts"],"names":["INITIAL_STATE","users","AllUsers","state","action","type","console","log","payload","user"],"mappings":";;;;;;AAGA,MAAMA,aAA2B,GAAG;AAChCC,EAAAA,KAAK,EAAE;AADyB,CAApC;;AAIA,MAAMC,QAAqC,GAAG,CAAEC,KAAK,GAAGH,aAAV,EAAyBI,MAAzB,KAAqC;AAC/E,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,UAAL;AAAiB;AACbC,QAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,OAAnB;AACA,cAAM;AAAEC,UAAAA;AAAF,YAAWL,MAAM,CAACI,OAAxB;AAEA,+CACOL,KADP;AAEIF,UAAAA,KAAK,EAAE,CACH,GAAGE,KAAK,CAACF,KADN,EAEHQ,IAFG;AAFX;AAOH;;AAED;AAAS;AACL,eAAON,KAAP;AACH;AAhBL;AAmBH,CApBD;;AAuBA,eAAeD,QAAf","sourcesContent":["import { Reducer } from 'redux';\nimport { IGlobalState } from  './types'\n\nconst INITIAL_STATE: IGlobalState = {\n    users: []\n}\n\nconst AllUsers: Reducer<IGlobalState | any> = ( state = INITIAL_STATE, action ) => {\n    switch(action.type){\n        case 'ADD_USER': {\n            console.log(action.payload)\n            const { user } = action.payload\n\n            return {\n                ...state,\n                users: [\n                    ...state.users,\n                    user\n                ]\n            }\n        }\n\n        default: {\n            return state;\n        }\n        \n    }\n}\n\n\nexport default AllUsers"]},"metadata":{},"sourceType":"module"}